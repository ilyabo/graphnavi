import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { Suspense, useEffect, useState } from "react";
import { getDuckConn, useDuckConn } from "../lib/useDuckConn";
import CreateTableDropzone, {
  CreateTableDropzoneResult,
} from "../components/CreateTableDropzone";
import {
  Text,
  Box,
  ChakraProvider,
  Flex,
  Heading,
  HStack,
  Spacer,
  VStack,
  useDisclosure,
} from "@chakra-ui/react";
import SqlEditor from "../components/SqlEditor";
import "react-mosaic-component/react-mosaic-component.css";

const Home: NextPage = () => {
  // const duckConn = useDuckConn();
  const [value, setValue] = useState<CreateTableDropzoneResult>();
  const [mounted, setMounted] = useState(false);
  const sqlEditor = useDisclosure();

  useEffect(() => {
    // Pre-load DuckDB so that datasets load faster
    getDuckConn();
    setMounted(true);
  }, []);

  if (!mounted) {
    return null;
  }
  return (
    <ChakraProvider>
      <Head>
        <title>Duckquack</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex
        as={"header"}
        p={5}
        mx={"auto"}
        // maxW={"6xl"}
      >
        <Flex direction={"column"}>
          <Heading fontSize="xl">Duckquack</Heading>
          <Text fontSize="xs">Drop CSV and run SQL</Text>
        </Flex>
        <Spacer />
        <a
          href="https://www.duckdb.org"
          target="_blank"
          rel="noopener noreferrer"
        >
          <Flex alignItems="center" gap={2}>
            <Text>Powered by DuckDB</Text>
            <Image src="/duckdb.svg" alt="DuckDB Logo" width={30} height={30} />
          </Flex>
        </a>
      </Flex>

      <VStack as={"main"}>
        <Suspense fallback={<div>Loadingâ€¦</div>}>
          <CreateTableDropzone
            value={value}
            outputColumnSpecs={[]}
            allowCustomColumns={true}
            onTableCreated={(inputTableName: string, result) => {
              console.log(inputTableName, result);
              setValue(result);
            }}
            onChange={(result) => {
              console.log("onChange", result);
            }}
            onReset={() => {
              console.log("onReset");
            }}
            onError={(message) => console.log("onError", message)}
          />
        </Suspense>
      </VStack>

      <SqlEditor
        schema={"public"}
        isOpen={sqlEditor.isOpen}
        onClose={sqlEditor.onClose}
      />
    </ChakraProvider>
  );
};

export default Home;
