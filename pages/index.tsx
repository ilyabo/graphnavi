import type { NextPage } from "next";
import Head from "next/head";
import { Suspense, useEffect, useState } from "react";
import { getDuckConn } from "../lib/useDuckConn";
import {
  ChakraProvider,
  Flex,
  Heading,
  Spacer,
  Text,
  useDisclosure,
  Button,
  Icon,
  Menu,
  MenuItem,
  MenuButton,
  MenuList,
} from "@chakra-ui/react";
import SqlEditor from "../components/SqlEditor";
import "react-mosaic-component/react-mosaic-component.css";
import theme from "../theme";
import { TableInfo } from "../lib/duckdb";
import CsvDropzone from "../components/CsvDropzone";
import { useToast } from "@chakra-ui/react";
import { ChevronDownIcon, DownloadIcon } from "@chakra-ui/icons";
import { AiFillGithub } from "react-icons/ai";
import { Authentication } from "../components/Authentication";
import MainView from "../components/MainView";
import "react-mosaic-component/react-mosaic-component.css";
import GraphView from "../components/GraphView";

const Home: NextPage = () => {
  // const duckConn = useDuckConn();
  const [mounted, setMounted] = useState(false);
  const sqlEditor = useDisclosure();
  const toast = useToast();

  const isLoggedIn = false;
  async function handleSave() {
    console.log('save');
  }
  async function loginGithub() {
    console.log('login github')
  }



  useEffect(() => {
    // Pre-load DuckDB so that datasets load faster
    setMounted(true);
    getDuckConn();
  }, []);

  if (!mounted) {
    return null;
  }
  return (
    <ChakraProvider theme={theme}>
      <Head>
        <title>GraphNAVI</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex
        position={"absolute"}
        direction={"column"}
        top={0}
        left={0}
        width={"100vw"}
        height={"100vh"}
        gap={1}
      >
        <Flex
          width={"100%"}
          as={"header"}
          px={5}
          pt={3}
          mx={"auto"}
        // maxW={"6xl"}
        >
          <Flex direction={"row"} alignItems={"center"} gap={5}>
            <Heading fontSize="2xl" display={"flex"}>
              <Text color={"gray.500"}>Graph</Text>
              <Text color={"gray.100"}>NAVI</Text>
            </Heading>
            <Text fontSize="xs" color={"gray.500"}>
              Network analysis and visualization tool
            </Text>
          </Flex>
          <Spacer />

          <Flex direction={"column"} justifyContent="right">
            <a
              href="https://www.duckdb.org"
              target="_blank"
              rel="noopener noreferrer"
            >
              <Flex alignItems="center" gap={2}>
                <Text>Powered by DuckDB</Text>
                {/* <Image
                  src="/duckdb.svg"
                  alt="DuckDB Logo"
                  width={30}
                  height={30}
                /> */}
              </Flex>
            </a>
            <Flex direction={"row"} gap={5}>
              <Authentication />
              <Menu>
                <MenuButton
                  as={Button}
                  rightIcon={<ChevronDownIcon
                  // size={"sm"}
                  />}>
                  Save
                </MenuButton>
                <MenuList>
                  <MenuItem
                    isDisabled={!isLoggedIn}
                    icon={<Icon as={AiFillGithub} h={5} w={5} />}
                  >
                    GitHub Gist
                  </MenuItem>
                  <MenuItem
                    isDisabled={!isLoggedIn}
                    // disabled={!results || loading || error}
                    icon={<Icon as={DownloadIcon} h={5} w={5} />}
                  // onClick={handleDownload}
                  >
                    Download CSV
                  </MenuItem>
                </MenuList>
              </Menu>
            </Flex>
          </Flex>
        </Flex>

        <Flex as={"main"} w={"100vw"} height={"100%"}>
          {/* <Flex p={5}>
            <Suspense fallback={<div>Loadingâ€¦</div>}>
              <CsvDropzone
                tables={value}
                onTableCreated={(inputTableName: string, result) => {
                  console.log(inputTableName, result);
                  setValue([...value, result]);
                }}
                onChange={(result) => {
                  console.log("onChange", result);
                }}
                onReset={() => {
                  console.log("onReset");
                }}
                onError={(message) =>
                  toast({
                    title: "Something went wrong",
                    description: message,
                    status: "error",
                    duration: 9000,
                    isClosable: true,
                  })
                }
              />
            </Suspense>
          </Flex> */}



          <SqlEditor isOpen={true} onClose={console.log} />
          {/*<a*/}
          {/*  href="https://www.duckdb.org"*/}
          {/*  target="_blank"*/}
          {/*  rel="noopener noreferrer"*/}
          {/*>*/}
          {/*  <Flex alignItems="center" gap={2}>*/}
          {/*    <Text fontSize={"xs"}>Powered by DuckDB</Text>*/}
          {/*    <Image*/}
          {/*      src="/duckdb.svg"*/}
          {/*      alt="DuckDB Logo"*/}
          {/*      width={30}*/}
          {/*      height={30}*/}
          {/*    />*/}
          {/*  </Flex>*/}
          {/*</a>*/}
        </Flex>

        <Flex as={"main"} w={"100vw"} height={"100%"}>
          <MainView isOpen={true} onClose={console.log} />
        </Flex>
      </Flex>
    </ChakraProvider>
  );
};

export default Home;
